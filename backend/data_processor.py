# Download a CVE Data File
# Extract the Zip File
# Combine JSON Files
# Save Combined Data

import requests
import datetime
from io import BytesIO
import zipfile
import json
import os

def download_file():
    # Get yesterday's date in the required format
    # yesterday = (datetime.datetime.now() - datetime.timedelta(days=1)).strftime('%Y-%m-%d')
    yesterday = (datetime.datetime.now() - datetime.timedelta(days=2)).strftime('%Y-%m-%d')
    
    # Construct the URL
    url = f"https://github.com/CVEProject/cvelistV5/releases/download/cve_{yesterday}_at_end_of_day/{yesterday}_delta_CVEs_at_end_of_day.zip"
    print(f"Starting file download from {url}")
    
    try:
        # Make the HTTP GET request
        response = requests.get(url)
        response.raise_for_status()  # Raise an exception for HTTP errors
        
        # Check if the response was successful
        if response.status_code == 200:
            print("File downloaded successfully")
            return BytesIO(response.content)  # Return the file content as a BytesIO object
        else:
            print(f"Failed to download file: {response.status_code}")
            return None
    except requests.exceptions.RequestException as e:
        print(f"Failed to download file: {e}")
        return None

# Usage
file_content = download_file()
if file_content:
    # Do something with the file content, e.g., save it to disk or process it
    with open('cve_delta_CVEs.zip', 'wb') as f:
        f.write(file_content.read())
        print("File saved successfully")

# Path to the zip file and output directory
zip_file_path = 'cve_delta_CVEs.zip'
output_directory = 'delta_cve_data_extracted'
combined_json_file = 'combined_cve_data.json'

# Step 1: Extract the Zip File
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    zip_ref.extractall(output_directory)

# Step 2: Combine JSON Files
combined_data = []

for root, _, files in os.walk(output_directory):
    for file in files:
        if file.endswith('.json'):
            file_path = os.path.join(root, file)
            with open(file_path, 'r', encoding='utf-8') as json_file:
                data = json.load(json_file)
                combined_data.append(data)

# Step 3: Save Combined Data to a JSON File
with open(combined_json_file, 'w', encoding='utf-8') as output_file:
    json.dump(combined_data, output_file, indent=4)

print(f"Combined JSON data has been saved to {combined_json_file}")

